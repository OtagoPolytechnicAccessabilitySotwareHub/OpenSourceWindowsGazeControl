<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pictureBox4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>